SELECT
	*
FROM
	COUNTRIES;

SELECT
	*
FROM
	DEPARTMENTS;

SELECT
	*
FROM
	EMPLOYEES
 -- this for select any table or column and any thing that you want to.
	SELECT
		*
	FROM
		EMPLOYEES
	WHERE
		DEPARTMENT_ID = 60
		OR SALARY > 6000
 -- this use for conditional selection of all tables AND // OR.
		SELECT
			*
		FROM
			EMPLOYEES
		WHERE
			SALARY = (
				SELECT
					DISTINCT SALARY
				FROM
					EMPLOYEES
				ORDER BY
					SALARY DESC LIMIT 1 OFFSET 1
			);

SELECT
	*
FROM
	EMPLOYEES
WHERE
	SALARY = (
		SELECT
			MAX(SALARY)
		FROM
			EMPLOYEES
		WHERE
			SALARY < (
				SELECT
					MAX(SALARY)
				FROM
					EMPLOYEES
			)
	);

SELECT
	MAX(SALARY)
FROM
	EMPLOYEES
WHERE
	SALARY < (
		SELECT
			MAX(SALARY)
		FROM
			EMPLOYEES
	);

SELECT
	*
FROM
	EMPLOYEES AS EMP
WHERE
	SALARY > (
		SELECT
			SALARY
		FROM
			EMPLOYEES AS MGR
		WHERE
			EMP.MANAGER_ID = MGR.EMPLOYEE_ID
	);

SELECT
	*
FROM
	EMPLOYEES AS EMP
WHERE
	JOB_ID = (
		SELECT
			JOB_ID
		FROM
			EMPLOYEES AS MGR
		WHERE
			EMP.MANAGER_ID = MGR.EMPLOYEE_ID
	);

-- advanced sub queries

SELECT
	*
FROM
	EMPLOYEES LIMIT 5;

WITH TEMP AS(
	SELECT
		*
	FROM
		EMPLOYEES LIMIT 5
)
SELECT
	*
FROM
	TEMP;

WITH AVGIT AS (
	SELECT
		AVG(SALARY) AS SAL1
	FROM
		EMPLOYEES
	WHERE
		DEPARTMENT_ID = 60 -- IT
), MAXMKT AS (
	SELECT
		MAX(SALARY) AS SAL2
	FROM
		EMPLOYEES
	WHERE
		DEPARTMENT_ID = 20 -- MARKETING
)
SELECT
	*
FROM
	EMPLOYEES
WHERE
	SALARY > (
		SELECT
			SAL1
		FROM
			AVGIT
	)
	AND SALARY < (
		SELECT
			SAL2
		FROM
			MAXMKT
	);

-- Common Table Expressions

SELECT
	*
FROM
	DEPARTMENTS;

SELECT
	*
FROM
	EMPLOYEES;

SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES,
	DEPARTMENTS
WHERE
	EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- normal join tables

SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES
	JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- joining normal

SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES
	INNER JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- inner join


SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES
	LEFT JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- left join


SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES
	RIGHT JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- right join


SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES   CROSS
	JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- cross join


SELECT
	EMPLOYEES.FIRST_NAME,
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	EMPLOYEES
	JOIN DEPARTMENTS
	USING (DEPARTMENT_ID);

-- cross join but use single value

-- joining tables using JOIN atributes

SELECT
	M.FIRST_NAME,
	E.FIRST_NAME
FROM
	EMPLOYEES AS E
	JOIN EMPLOYEES AS M
	ON E.EMPLOYEE_ID = M.MANAGER_ID;

-- how many employee have under of a single manager.

SELECT
	DEPARTMENTS.DEPARTMENT_NAME
FROM
	DEPARTMENTS
	LEFT JOIN EMPLOYEES
	ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
WHERE
	EMPLOYEES.DEPARTMENT_ID IS NULL;

-- which department have no employee

SELECT
	EMPLOYEES.FIRST_NAME,
	EMPLOYEES.SALARY,
	(
		SELECT
			AVG(SALARY)
		FROM
			EMPLOYEES
		WHERE
			DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
	) - EMPLOYEES.SALARY AS AVAREGE_LOW_SALARY
FROM
	EMPLOYEES
	JOIN DEPARTMENTS
	ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT
	AVG(SALARY)
FROM
	EMPLOYEES
WHERE
	DEPARTMENT_ID = 10
 -- compear salary to avarager salary.
	SELECT
		DEPARTMENT_NAME,
		MIN(SALARY),
		AVG(SALARY)
	FROM
		EMPLOYEES
		JOIN DEPARTMENTS
		ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
	GROUP BY
		DEPARTMENT_NAME
	HAVING
		MIN(SALARY) > 5000;

-- show thos type of department salary which salary was under 5000

use dummydb;

-- union
SELECT *
FROM EMPLOYEES
WHERE SALARY > 10000
UNION 
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100;

-- union all
SELECT *
FROM EMPLOYEES
WHERE SALARY > 10000
UNION ALL
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100;

-- INTERSECT
SELECT *
FROM EMPLOYEES
WHERE SALARY > 10000
INTERSECT
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100;

-- MINUS
SELECT *
FROM EMPLOYEES
WHERE SALARY > 10000 AND DEPARTMENT_ID != 100;

